{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","useState","position","setPosition","maxPosition","length","isDisabledButtonPre","isDisabledButtonNext","prevFrameSizeRef","useRef","useEffect","current","prevPosition","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","disabled","App","state","this","htmlFor","id","min","max","onChange","event","setState","target","value","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14071bfe.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n}) => {\n  const [position, setPosition] = useState(0);\n\n  const maxPosition = images.length - frameSize;\n  const isDisabledButtonPre = position === 0;\n  const isDisabledButtonNext = position === maxPosition;\n  const prevFrameSizeRef = useRef<number>(frameSize);\n\n  const moviePrevious = () => {\n    if (position - step > 0) {\n      setPosition(position - step);\n    } else {\n      setPosition(0);\n    }\n  };\n\n  const movieNext = () => {\n    if (position + step < maxPosition) {\n      setPosition(position + step);\n    } else {\n      setPosition(maxPosition);\n    }\n  };\n\n  useEffect(() => {\n    if (frameSize > prevFrameSizeRef.current && position > maxPosition) {\n      setPosition(prevPosition => prevPosition - 1);\n    }\n\n    prevFrameSizeRef.current = frameSize;\n  }, [frameSize, position, maxPosition]);\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${itemWidth * frameSize}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n      >\n        {images.map((image, index) => (\n          <li\n            key={image}\n            style={{\n              transform: `translateX(${-position * itemWidth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${index}`}\n              width={itemWidth}\n              style={{\n                transition: `${animationDuration}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={moviePrevious}\n          disabled={isDisabledButtonPre}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={movieNext}\n          disabled={isDisabledButtonNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    const handleItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ itemWidth: +event.target.value });\n    };\n\n    const handleFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ frameSize: +event.target.value });\n    };\n\n    const handleStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ step: +event.target.value });\n    };\n\n    const handleDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ animationDuration: +event.target.value });\n    };\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <div className=\"App__container\">\n          <div className=\"App__input-container\">\n            <label htmlFor=\"itemId\">\n              Item Width:\n            </label>\n\n            <input\n              className=\"App__input\"\n              id=\"itemId\"\n              type=\"number\"\n              min={50}\n              max={390}\n              step={10}\n              onChange={handleItemWidth}\n              value={itemWidth}\n            />\n          </div>\n          <div className=\"App__input-container\">\n            <label htmlFor=\"frameId\">\n              Frame Size:\n            </label>\n\n            <input\n              className=\"App__input\"\n              id=\"frameId\"\n              type=\"number\"\n              min={1}\n              max={images.length}\n              value={frameSize}\n              onChange={handleFrameSize}\n            />\n          </div>\n          <div className=\"App__input-container\">\n            <label htmlFor=\"stepId\">\n              Step:\n            </label>\n\n            <input\n              className=\"App__input\"\n              id=\"stepId\"\n              type=\"number\"\n              min={1}\n              max={10}\n              value={step}\n              onChange={handleStep}\n            />\n          </div>\n          <div className=\"App__input-container\">\n            <label htmlFor=\"animationDurationId\">\n              Animation Duration:\n            </label>\n\n            <input\n              className=\"App__input\"\n              id=\"animationDurationId\"\n              type=\"number\"\n              min={100}\n              step={100}\n              value={animationDuration}\n              onChange={handleDuration}\n            />\n          </div>\n        </div>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}